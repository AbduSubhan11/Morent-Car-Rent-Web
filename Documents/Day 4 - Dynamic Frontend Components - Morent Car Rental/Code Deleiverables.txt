--> Product Card Script <--
import Image from "next/image";
import React from "react";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { useWish } from "@/Context/wishlistContext";

type data = {
  id: number;
  name: string;
  category: string;
  image: string;
  petrol: number;
  people: number;
  price: number;
  originalPrice?: number;
};

function Card({
  id,
  name,
  category,
  image,
  petrol,
  people,
  price,
  originalPrice,
}: data) {
  const { addToWish } = useWish();
  
  return (
    <div className="p-5 space-y-10 lg:w-fi bg-white rounded-md">
      <div className="flex flex-col">
        <div className="flex items-center justify-between">
          <h1 className="font-bold text-xl ">{name}</h1>
          <Link href={"/wishlist"}>
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={()=>addToWish({id,name,category,image,petrol,people,price,originalPrice,})}
              className="hover:scale-90"
            >
              <path
                d="M12.62 20.8096C12.28 20.9296 11.72 20.9296 11.38 20.8096C8.48 19.8196 2 15.6896 2 8.68961C2 5.59961 4.49 3.09961 7.56 3.09961C9.38 3.09961 10.99 3.97961 12 5.33961C13.01 3.97961 14.63 3.09961 16.44 3.09961C19.51 3.09961 22 5.59961 22 8.68961C22 15.6896 15.52 19.8196 12.62 20.8096Z"
                stroke="#90A3BF"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </Link>
        </div>
        <div className="text-[#90A3BF] font-bold text-sm ">{category}</div>
      </div>
      <div className="flex justify-center">
        <Image src={image} alt="Image" width={200} height={150} />
      </div>

      <div className="flex items-center gap-4">
        <div className="flex items-center gap-[6px]">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M22.34 9.33L20.34 8.33C19.97 8.15 19.51 8.29 19.33 8.66C19.14 9.04 19.29 9.49 19.66 9.67L21.25 10.46V15.25L17.5 15.26V5C17.5 3 16.16 2 14.5 2H6.5C4.84 2 3.5 3 3.5 5V21.25H2C1.59 21.25 1.25 21.59 1.25 22C1.25 22.41 1.59 22.75 2 22.75H19C19.41 22.75 19.75 22.41 19.75 22C19.75 21.59 19.41 21.25 19 21.25H17.5V16.76L22 16.75C22.42 16.75 22.75 16.41 22.75 16V10C22.75 9.72 22.59 9.46 22.34 9.33ZM6 6.89C6 5.5 6.85 5 7.89 5H13.12C14.15 5 15 5.5 15 6.89V8.12C15 9.5 14.15 10 13.11 10H7.89C6.85 10 6 9.5 6 8.11V6.89ZM6.5 12.25H9.5C9.91 12.25 10.25 12.59 10.25 13C10.25 13.41 9.91 13.75 9.5 13.75H6.5C6.09 13.75 5.75 13.41 5.75 13C5.75 12.59 6.09 12.25 6.5 12.25Z"
              fill="#90A3BF"
            />
          </svg>
          {petrol}
        </div>
        <div className="flex items-center gap-[6px]">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.53 2 12 2Z"
              fill="#90A3BF"
            />
            <rect x="4" y="4" width="16" height="16" rx="8" fill="white" />
            <path
              d="M12 6C8.688 6 6 8.688 6 12C6 15.312 8.688 18 12 18C15.312 18 18 15.312 18 12C18 8.688 15.318 6 12 6Z"
              fill="#90A3BF"
            />
            <rect x="8" y="8" width="8" height="8" rx="4" fill="white" />
            <rect x="11" y="17" width="2" height="4" fill="#90A3BF" />
            <rect x="17" y="11" width="4" height="2" fill="#90A3BF" />
            <rect x="3" y="11" width="4" height="2" fill="#90A3BF" />
          </svg>
          Manual
        </div>
        <div className="flex items-center gap-[6px]">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 2C6.38 2 4.25 4.13 4.25 6.75C4.25 9.32 6.26 11.4 8.88 11.49C8.96 11.48 9.04 11.48 9.1 11.49C9.12 11.49 9.13 11.49 9.15 11.49C9.16 11.49 9.16 11.49 9.17 11.49C11.73 11.4 13.74 9.32 13.75 6.75C13.75 4.13 11.62 2 9 2Z"
              fill="#90A3BF"
            />
            <path
              d="M14.08 14.1499C11.29 12.2899 6.73996 12.2899 3.92996 14.1499C2.65996 14.9999 1.95996 16.1499 1.95996 17.3799C1.95996 18.6099 2.65996 19.7499 3.91996 20.5899C5.31996 21.5299 7.15996 21.9999 8.99996 21.9999C10.84 21.9999 12.68 21.5299 14.08 20.5899C15.34 19.7399 16.04 18.5999 16.04 17.3599C16.03 16.1299 15.34 14.9899 14.08 14.1499Z"
              fill="#90A3BF"
            />
            <path
              d="M19.9904 7.3401C20.1504 9.2801 18.7704 10.9801 16.8604 11.2101C16.8504 11.2101 16.8504 11.2101 16.8404 11.2101H16.8104C16.7504 11.2101 16.6904 11.2101 16.6404 11.2301C15.6704 11.2801 14.7804 10.9701 14.1104 10.4001C15.1404 9.4801 15.7304 8.1001 15.6104 6.6001C15.5404 5.7901 15.2604 5.0501 14.8404 4.4201C15.2204 4.2301 15.6604 4.1101 16.1104 4.0701C18.0704 3.9001 19.8204 5.3601 19.9904 7.3401Z"
              fill="#90A3BF"
            />
            <path
              d="M21.9902 16.5904C21.9102 17.5604 21.2902 18.4004 20.2502 18.9704C19.2502 19.5204 17.9902 19.7804 16.7402 19.7504C17.4602 19.1004 17.8802 18.2904 17.9602 17.4304C18.0602 16.1904 17.4702 15.0004 16.2902 14.0504C15.6202 13.5204 14.8402 13.1004 13.9902 12.7904C16.2002 12.1504 18.9802 12.5804 20.6902 13.9604C21.6102 14.7004 22.0802 15.6304 21.9902 16.5904Z"
              fill="#90A3BF"
            />
          </svg>
          {people}
        </div>
      </div>

      <div className="flex justify-between items-center">
        <div className="flex flex-col">
          <h1 className="text-xl font-bold">
            {price.toString().includes("/day") ? price : `${price}/day`}
          </h1>
          {originalPrice && (
            <h1 className="text-[#90A3BF] font-bold text-sm">
              <s>{originalPrice}</s>
            </h1>
          )}
        </div>
        <Link href={`/car/${id}`}>
          <Button variant={"outline"} className="bg-[#3563E9] px-5 text-white">
            Rent Now
          </Button>
        </Link>
      </div>
    </div>
  );
}

export default Card;




--> Car Listing Page <--
"use client";
import React, { useEffect, useState } from "react";
import Mycard from "../../../components/Mycard";
import { client } from "@/sanity/lib/client";

type AllCar = {
  id: number;
  name: string;
  category: string;
  image: string;
  petrol: number;
  people: number;
  price: number;
  type:string;
  originalPrice?: number;
};

async function fetchAllCarsFromSanity() {
  const query = `*[_type == "car"]{
    id,
    type,
    name,
    category,
    "image": image.asset->url,
    fuelCapacity,
    seatingCapacity,
    pricePerDay,
    originalPrice
  }`;

  try {
    const cars = await client.fetch(query);

    return cars.map((car: any) => ({
      id: car.id,
      name: car.name,
      type:car.type,
      category: car.category,
      image: car.image || "",
      petrol: car.fuelCapacity || 0,
      people: car.seatingCapacity || 0,
      price: car.pricePerDay || 0,
      originalPrice: car.originalPrice || undefined,
    }));
  } catch (error) {
    console.error("Error fetching data from Sanity:", error);
    return [];
  }
}

function Page() {
  const [carData, setCarData] = useState<AllCar[]>([]);
  const [searchValue, setSearchValue] = useState("");
  const [filterType, setFilterType] = useState("");

  useEffect(() => {
    async function fetchData() {
      const fetchedCars = await fetchAllCarsFromSanity();
      setCarData(fetchedCars);
    }
    fetchData();
  }, []);

  return (
    <section className="px-6 sm:px-10 bg-[#f6f7f9] py-8 space-y-8">
      <div className="space-y-8">
        <div className="flex flex-col sm:flex-row items-center justify-between sm:space-y-0 space-y-5">
          <h1 className="text-[#90A3BF] text-base font-semibold ">All Cars</h1>
          <div className="flex items-center flex-col sm:flex-row  xl:w-[40%] sm:gap-x-5 sm:space-y-0 space-y-5">
            {/* Search */}
            <div className="flex items-center justify-between w-full sm:w-[95%] h-[44px] rounded-[70px] px-4 border border-gray-400">
              <div className="flex items-center gap-3">
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
                    stroke="#596780"
                    strokeWidth="1.5"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M22 22L20 20"
                    stroke="#596780"
                    strokeWidth="1.5"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
                <input
                  type="text"
                  placeholder="Search cars by name"
                  className="w-full outline-none bg-transparent"
                  onChange={(e) => setSearchValue(e.target.value.toLowerCase())}
                />
              </div>
            </div>

            {/* FILTER */}
            <select
              onChange={(e) => setFilterType(e.target.value)}
              className="outline-none overflow-hidden w-full sm:w-[95%] h-12 rounded-[70px] px-4 border border-gray-400 bg-transparent"
            >
              <option value="" hidden>
                Filter by Type
              </option>
              <option value="">All</option>
              <option value="Sport">Sport</option>
              <option value="Sedan">Sedan</option>
              <option value="Electric">Electric</option>
              <option value="Gasoline">Gasoline</option>
              <option value="Diesel">Diesel</option>
              <option value="Hybrid">Hybrid</option>
              <option value="SUV">SUV</option>
              <option value="Hatchback">Hatchback</option>
            </select>
          </div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
          {carData.filter((searchproduct) =>
            searchproduct.name.toLowerCase().includes(searchValue)
          ).length > 0 ? (
            carData
              .filter((searchproduct) =>
                searchproduct.name
                  .toLowerCase()
                  .includes(searchValue.toLowerCase())
              )
              .filter((filtCategory) =>
                filtCategory.type.includes(filterType)
              )
              .map((val: AllCar, index: number) => (
                <Mycard
                  key={index}
                  id={val.id}
                  name={val.name}
                  category={val.category}
                  image={val.image}
                  petrol={val.petrol}
                  people={val.people}
                  price={val.price}
                  originalPrice={val.originalPrice}
                />
              ))
          ) : (
            <div className=" text-xl w-full text-gray-500 mt-4 ">
              <h1>
                No cars found matching your search or check your internet
                connection.
              </h1>
            </div>
          )}
        </div>
      </div>
    </section>
  );
}

export default Page;




--> Dynamic Routing <--
"use client";
import { Button } from "@/components/ui/button";

import Image from "next/image";
import React, { useEffect, useState } from "react";
import Mycard from "../../../../components/Mycard";
import { Card, CardContent } from "@/components/ui/card";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
} from "@/components/ui/carousel";
import { client } from "@/sanity/lib/client";
import CarouselSkeleton from "@/components/CarouselSkeleton";
import DetailPageSkeleton from "@/components/DetailPageSkeleton";
import RentNowModel from "@/components/RentNowModel";
import CategoryAsideBar from "@/components/Category AsideBar";

type recomendcardata = {
  id: number;
  name: string;
  category: string;
  image: string;
  petrol: number;
  people: number;
  price: number;
  type?: string;
  transmission?: string;
  originalPrice?: number;
};

async function fetchCarsForRecommended() {
  const query = `*[_type == "car" && "recommended" in tags]{
    id,
    name,
    category,
    "image": image.asset->url,
    fuelCapacity,
    seatingCapacity,
    pricePerDay,
    originalPrice
  }`;

  try {
    const cars = await client.fetch(query);

    return cars.map((car: any) => ({
      id: car.id,
      name: car.name,
      category: car.category,
      image: car.image || "",
      petrol: car.fuelCapacity || 0,
      people: car.seatingCapacity || 0,
      price: car.pricePerDay || 0,
      originalPrice: car.originalPrice || undefined,
    }));
  } catch (error) {
    console.error("Error fetching data from Sanity:", error);
    return [];
  }
}

async function fetchAllCars() {
  const query = `*[_type == "car" ]{
    id,
    name,
    type,
    category,
    "image": image.asset->url,
    fuelCapacity,
    seatingCapacity,
    pricePerDay,
    originalPrice,
    transmission
  }`;

  try {
    const cars = await client.fetch(query);

    return cars.map((car: any) => ({
      id: car.id,
      name: car.name,
      type: car.type,
      category: car.category,
      image: car.image || "",
      petrol: car.fuelCapacity || 0,
      people: car.seatingCapacity || 0,
      price: car.pricePerDay || 0,
      transmission: car.transmission,
      originalPrice: car.originalPrice || undefined,
    }));
  } catch (error) {
    console.error("Error fetching data from Sanity:", error);
    return [];
  }
}

function Page({ params }: { params: { id: string } }) {
  const [priceRange, setPriceRange] = useState<[number, number]>([90, 210]);
  const [AllCarData, SetAllCarData] = useState<recomendcardata[]>([]);
  const [isPortal, SetIsPortal] = useState(false);
  const [RecommendedcarData, SetRecommendedcarData] = useState<recomendcardata[]>([]);

  const handleSliderChange = (value: [number, number]) => {
    setPriceRange(value);
  };

  const toggleModal = () => {
    SetIsPortal(!isPortal);
  };

  const searchedCar = AllCarData.find((car) => car.id === parseInt(params.id));

  useEffect(() => {
    async function fetchDynamicData() {
      const fetchedDynamicCars = await fetchAllCars();

      SetAllCarData(fetchedDynamicCars);
    }
    fetchDynamicData();
  }, []);

  useEffect(() => {
    async function fetchRecommendData() {
      const fetchedCars = await fetchCarsForRecommended();
      SetRecommendedcarData(fetchedCars);
    }
    fetchRecommendData();
  }, []);

  return (
    <section className="bg-[#f6f7f9] flex ">
      <CategoryAsideBar
        maxPrice={priceRange}
        handleSliderChange={handleSliderChange}
      />

      {/* RIGHT SIDE */}
      <main className=" w-full lg:w-[90%] xl:w-[85%] px-6 py-7 space-y-7">
        {!searchedCar ? (
          <DetailPageSkeleton />
        ) : (
          <div className="flex flex-col xl:flex-row gap-10">
            {/* LEFT */}
            <div className=" flex flex-col gap-5 rounded-md w-full">
              <div className="bg-[#3563E9] h-[232px] sm:h-[360px] relative flex flex-col items-center justify-end py-10 ">
                <Image
                  src={searchedCar?.image || ""}
                  alt="Image"
                  width={300}
                  height={150}
                  className="sm:w-[300px] w-[190px] "
                />
                <div className="text-white flex flex-col gap-4 p-5 absolute top-0">
                  <h1 className="font-semibold text-base sm:text-[32px] leading-6 sm:leading-8">
                    Sports car with the best design and acceleration
                  </h1>
                  <p className="font-medium text-xs sm:text-base leading-[15px] sm:leading-6 ">
                    Safety and comfort while driving a{" "}
                  </p>
                </div>
              </div>
              <div className="flex items-center gap-5 justify-between">
                <Image
                  src={"/images/view-1.png"}
                  alt="Image"
                  width={150}
                  height={150}
                  className="sm:w-[150px] w-[80px]"
                />
                <Image
                  src={"/images/view-2.png"}
                  alt="Image"
                  width={150}
                  height={150}
                  className="sm:w-[150px] w-[80px]"
                />
                <Image
                  src={"/images/view-3.png"}
                  alt="Image"
                  width={150}
                  height={150}
                  className="sm:w-[150px] w-[80px]"
                />
              </div>
            </div>

            {/* RIGHT */}
            <div className="p-5 bg-white shadow rounded-md space-y-10 ">
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <h1 className="font-bold text-3xl">{searchedCar?.name}</h1>
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M16.44 3.09998C14.63 3.09998 13.01 3.97998 12 5.32998C10.99 3.97998 9.37 3.09998 7.56 3.09998C4.49 3.09998 2 5.59998 2 8.68998C2 9.87998 2.19 10.98 2.52 12C4.1 17 8.97 19.99 11.38 20.81C11.72 20.93 12.28 20.93 12.62 20.81C15.03 19.99 19.9 17 21.48 12C21.81 10.98 22 9.87998 22 8.68998C22 5.59998 19.51 3.09998 16.44 3.09998Z"
                      fill="#ED3F3F"
                    />
                  </svg>
                </div>
                <div className="flex items-center gap-2">
                  <Image
                    src={"/images/Review Star.png"}
                    alt="Star Image"
                    width={100}
                    height={100}
                  />
                  <h1 className="font-medium text-sm text-[#596780]">
                    440+ Reviewer
                  </h1>
                </div>
              </div>
              <div>
                <p className="font-normal text-[#596780] leading-10">
                  NISMO has become the embodiment of Nissan&apos;s outstanding
                  performance, inspired by the most unforgiving proving ground,
                  the &quot;race track&quot;.
                </p>
              </div>

              <div className="flex items-center justify-between">
                <div className="flex flex-col gap-5">
                  <div className="flex items-center justify-between gap-4 sm:gap-10">
                    <h1 className="text-xs sm:text-xl text-[#90A3BF] ">
                      Type Car
                    </h1>
                    <h1 className="text-xs sm:text-xl text-[#596780] font-semibold">
                      {searchedCar?.type}
                    </h1>
                  </div>
                  <div className="flex items-center justify-between gap-4 sm:gap-10">
                    <h1 className="text-xs sm:text-xl text-[#90A3BF] ">
                      Steering
                    </h1>
                    <h1 className="text-xs sm:text-xl text-[#596780] font-semibold">
                      {searchedCar?.transmission}
                    </h1>
                  </div>
                </div>
                <div className="flex flex-col gap-5">
                  <div className="flex items-center justify-between gap-4 sm:gap-10">
                    <h1 className="text-xs sm:text-xl text-[#90A3BF] ">
                      Capacity
                    </h1>
                    <h1 className="text-xs sm:text-xl text-[#596780] font-semibold">
                      {searchedCar?.people}
                    </h1>
                  </div>
                  <div className="flex items-center justify-between gap-4 sm:gap-10    ">
                    <h1 className="text-xs sm:text-xl text-[#90A3BF] ">
                      Gasoline
                    </h1>
                    <h1 className="text-xs sm:text-xl text-[#596780] font-semibold">
                      {searchedCar?.petrol}
                    </h1>
                  </div>
                </div>
              </div>

              <div className="flex justify-between items-center">
                <div className="flex flex-col">
                  <h1 className="text-xl font-bold">
                    <h1 className="text-xl font-bold">
                      {searchedCar?.price.toString().includes("/day")
                        ? searchedCar?.price
                        : `${searchedCar?.price}/day`}
                    </h1>
                  </h1>
                  {searchedCar?.originalPrice && (
                    <h1 className="text-[#90A3BF] font-bold text-sm">
                      <s>{searchedCar.originalPrice}</s>
                    </h1>
                  )}
                </div>
                <Button
                  onClick={toggleModal}
                  variant={"outline"}
                  className="bg-[#3563E9] px-5 text-white"
                >
                  Rent Now
                </Button>
                <RentNowModel
                  isPortal={isPortal}
                  searchedCar={searchedCar}
                  toggleModal={toggleModal}
                />
              </div>
            </div>
          </div>
        )}

        <div className="bg-white rounded-md p-5">
          <div className="flex items-center gap-5">
            <h1 className="font-semibold text-xl text-[#1A202C]">Reviews</h1>
            <div className="bg-[#3563E9] px-2 py-1 rounded-md flex items-center justify-center text-white">
              13
            </div>
          </div>
          {/* FIRST CLIENT */}
          <div className="flex items-cente justify-center gap-2 sm:gap-5 space-y-5">
            <div className="py-5">
              <Image
                src="/images/Profil.png"
                alt="profile image"
                width={100}
                height={100}
                className=" w-[50px]"
              />
            </div>
            <div className="flex flex-col items-center justify-between gap-5 w-full">
              <div className="flex items-center justify-between w-full">
                <div>
                  <h1 className="font-bold text-base sm:text-xl">
                    Alex Stanton
                  </h1>
                  <h1 className="text-xs sm:text-sm font-medium text-[#90A3BF]">
                    CEO at Bukalapak
                  </h1>
                </div>
                <div>
                  <h1 className="text-xs sm:text-sm font-medium text-[#90A3BF]">
                    21 July 2022
                  </h1>
                  <Image
                    src="/images/Review Star.png"
                    alt="profile image"
                    width={100}
                    height={100}
                  />
                </div>
              </div>
              <div>
                <p className="text-sm text-[#596780] font-normal ">
                  We are very happy with the service from the MORENT App. Morent
                  has a low price and also a large variety of cars with good and
                  comfortable facilities. In addition, the service provided by
                  the officers is also very friendly and very polite.
                </p>
              </div>
            </div>
          </div>

          {/* SECOND CLIENT */}
          <div className="flex items-cente justify-center gap-2 sm:gap-5 space-y-5">
            <div className="py-5">
              <Image
                src="/images/ProfilL (1).png"
                alt="profile image"
                width={100}
                height={100}
                className=" w-[50px]"
              />
            </div>
            <div className="flex flex-col items-center justify-between gap-5 w-full">
              <div className="flex items-center justify-between w-full">
                <div>
                  <h1 className="font-bold text-base sm:text-xl">
                    Alex Stanton
                  </h1>
                  <h1 className="text-xs sm:text-sm font-medium text-[#90A3BF]">
                    CEO at Bukalapak
                  </h1>
                </div>
                <div>
                  <h1 className="text-xs sm:text-sm font-medium text-[#90A3BF]">
                    21 July 2022
                  </h1>
                  <Image
                    src="/images/Review Star.png"
                    alt="profile image"
                    width={100}
                    height={100}
                  />
                </div>
              </div>
              <div>
                <p className="text-sm text-[#596780] font-normal ">
                  We are very happy with the service from the MORENT App. Morent
                  has a low price and also a large variety of cars with good and
                  comfortable facilities. In addition, the service provided by
                  the officers is also very friendly and very polite.
                </p>
              </div>
            </div>
          </div>
        </div>

        <div className="text-[#90A3BF] flex items-center justify-center gap-4">
          <button>Show All</button>
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.00026 11.1996C7.53359 11.1996 7.06692 11.0196 6.71359 10.6663L2.36692 6.31964C2.17359 6.1263 2.17359 5.80631 2.36692 5.61297C2.56026 5.41964 2.88026 5.41964 3.07359 5.61297L7.42026 9.95964C7.74026 10.2796 8.26026 10.2796 8.58026 9.95964L12.9269 5.61297C13.1203 5.41964 13.4403 5.41964 13.6336 5.61297C13.8269 5.80631 13.8269 6.1263 13.6336 6.31964L9.28692 10.6663C8.93359 11.0196 8.46692 11.1996 8.00026 11.1996Z"
              fill="#90A3BF"
              stroke="#90A3BF"
              strokeWidth="0.5"
            />
          </svg>
        </div>

        <div className=" bg-[#f6f7f9] py-8 space-y-8">
          <div className="space-y-8">
            <div className="flex items-center justify-between">
              <h1 className="text-[#90A3BF] text-base font-semibold ">
                Recomendation Car
              </h1>
              <h1 className="text-[#3563E9] text-base font-semibold ">
                View All
              </h1>
            </div>
            <Carousel className="w-full max-w-full">
              <CarouselContent>
                {RecommendedcarData.length === 0 ? (
                  <CarouselSkeleton />
                ) : (
                  RecommendedcarData.map(
                    (val: recomendcardata, index: number) => (
                      <CarouselItem
                        key={index}
                        className="md:basis-1/2 lg:basis-1/3 xl:basis-1/3 border-none"
                      >
                        <Card className="border-none h-96">
                          <CardContent className="flex border-none aspect-squar items-center justify-center p-5">
                            <Mycard
                              id={val.id}
                              name={val.name}
                              category={val.category}
                              image={val.image}
                              petrol={val.petrol}
                              people={val.people}
                              price={val.price}
                              originalPrice={val.originalPrice}
                            />
                          </CardContent>
                        </Card>
                      </CarouselItem>
                    )
                  )
                )}
              </CarouselContent>
            </Carousel>
          </div>
        </div>
      </main>
    </section>
  );
}

export default Page;


